REMOTECONTROL_VERSION = 0.8.0

isEmpty(REMOTECONTROL_LIBRARY_TYPE) {
    REMOTECONTROL_LIBRARY_TYPE = staticlib
}

QT += network qml

REMOTECONTROL_PATH = $${PWD}
REMOTECONTROL_INCLUDEPATH = $${REMOTECONTROL_PATH}
REMOTECONTROL_LIBDIR = $$shadowed($$PWD/remotecontrol)

CONFIG(debug, debug|release) {
  win*:REMOTECONTROL_LIBDIR = $$REMOTECONTROL_LIBDIR/debug
}else{
  win*:REMOTECONTROL_LIBDIR = $$REMOTECONTROL_LIBDIR/release
}

contains(REMOTECONTROL_LIBRARY_TYPE, staticlib) {
    DEFINES += REMOTECONTROL_LIBRARY_STATIC
} else {
    DEFINES += REMOTECONTROL_LIBRARY
}

INCLUDEPATH += $${REMOTECONTROL_INCLUDEPATH}
DEPENDPATH += $${REMOTECONTROL_INCLUDEPATH}
QMAKE_LIBDIR += $${REMOTECONTROL_LIBDIR}

CONFIG(debug, debug|release) {
  REMOTECONTROL_NAME = remotecontrold
}else{
  REMOTECONTROL_NAME = remotecontrol
}

LIBS += -l$$REMOTECONTROL_NAME

DEFINES -= QT_NO_CAST_TO_ASCII QT_NO_CAST_FROM_ASCII

win*-msvc*{
DEFINES += _SCL_SECURE_NO_WARNINGS
DEFINES += _CRT_SECURE_NO_WARNINGS
}

isEmpty(MOBATA_LIB_PATH){
  MOBATA_LIB_PATH = $$PWD/../../mobata
}
MOBATA_PRIFILE = $${MOBATA_LIB_PATH}/mobata.pri
requires(exists($${MOBATA_PRIFILE}))
include($${MOBATA_PRIFILE})

isEmpty(IFAK_QJSONRPC_HOME) {
  IFAK_QJSONRPC_HOME = $$PWD/../../3rd/ifak_qjsonrpc
}
IFAK_QJSONRPC_PRIFILE = $${IFAK_QJSONRPC_HOME}/ifak_qjsonrpc_static.pri
requires(exists($${IFAK_QJSONRPC_PRIFILE}))
include($${IFAK_QJSONRPC_PRIFILE})
